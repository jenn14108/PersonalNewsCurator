plugins {
    id 'java'
}

group 'com.newscurator'
version '1.0-SNAPSHOT'

task fatJar(type: Jar) {
    manifest {
        attributes(
                'Main-Class': 'com.newscurator.app.NewsCuratorApplication',
        )
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from sourceSets.main.output
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'com.squareup.okhttp3:mockwebserver:4.9.2'
    implementation 'com.sun.mail:javax.mail:1.6.2'
    implementation 'io.github.cdimascio:java-dotenv:5.2.2'
    implementation 'org.apache.logging.log4j:log4j-api:2.16.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.16.0'
    implementation 'org.projectlombok:lombok:1.18.18'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
}

task stage(dependsOn: ['build', 'clean', 'fatJar'])
build.mustRunAfter(clean)
fatJar.mustRunAfter(build)
